// <auto-generated />
using System;
using KossanVMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KossanVMS.Migrations
{
    [DbContext(typeof(VmsContext))]
    [Migration("20250930074859_UpdateSnakeCase")]
    partial class UpdateSnakeCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KossanVMS.Data.VisitBranch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"), 1L, 1);

                    b.Property<bool>("BranchContract")
                        .HasColumnType("bit")
                        .HasColumnName("branch_contract");

                    b.Property<string>("BranchDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("branch_description");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("branch_name");

                    b.Property<bool>("BranchStatus")
                        .HasColumnType("bit")
                        .HasColumnName("branch_status");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("BranchID");

                    b.HasIndex("BranchName")
                        .IsUnique();

                    b.ToTable("visit_branches");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<bool>("CategoryContract")
                        .HasColumnType("bit")
                        .HasColumnName("category_contract");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("category_description");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("category_name");

                    b.Property<bool>("CategoryStatus")
                        .HasColumnType("bit")
                        .HasColumnName("category_status");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("visit_categories");
                });

            modelBuilder.Entity("KossanVMS.Data.Visitor", b =>
                {
                    b.Property<int>("VisitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorID"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("full_name");

                    b.Property<string>("ICNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ic_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("VisitorID");

                    b.HasIndex("ICNo")
                        .IsUnique();

                    b.ToTable("visitors");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorBlackList", b =>
                {
                    b.Property<int>("VisitorID")
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsBlackList")
                        .HasColumnType("bit")
                        .HasColumnName("is_blacklist");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("VisitorID");

                    b.ToTable("visitor_blacklists");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorCompany", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"), 1L, 1);

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("company");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    b.HasKey("CompanyID");

                    b.HasIndex("VisitorID")
                        .IsUnique();

                    b.ToTable("visitor_companies");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorContact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postcode");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    b.HasKey("ContactID");

                    b.HasIndex("VisitorID")
                        .IsUnique();

                    b.ToTable("visitor_contacts");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorPhoto", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("photo_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoID"), 1L, 1);

                    b.Property<DateTime>("CaptureDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("capture_date");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("photo_path");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    b.HasKey("PhotoID");

                    b.HasIndex("VisitorID")
                        .IsUnique();

                    b.ToTable("visitor_photos");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitPurpose", b =>
                {
                    b.Property<int>("PurposeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("purpose_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurposeID"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("PurposeContract")
                        .HasColumnType("bit")
                        .HasColumnName("purpose_contract");

                    b.Property<string>("PurposeDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("purpose_description");

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("purpose_name");

                    b.Property<bool>("PurposeStatus")
                        .HasColumnType("bit")
                        .HasColumnName("purpose_status");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("PurposeID");

                    b.HasIndex("PurposeName")
                        .IsUnique();

                    b.ToTable("visit_purposes");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitRecord", b =>
                {
                    b.Property<Guid>("VisitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("visit_id");

                    b.Property<int>("BranchID")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("GatePass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gate_pass");

                    b.Property<byte>("InContainer")
                        .HasColumnType("tinyint")
                        .HasColumnName("in_container");

                    b.Property<string>("InContainerNO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_container_no");

                    b.Property<string>("InPBID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_pbid");

                    b.Property<string>("InPhotoPath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_photo_path");

                    b.Property<string>("InRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_remarks");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time");

                    b.Property<byte>("OutContainer")
                        .HasColumnType("tinyint")
                        .HasColumnName("out_container");

                    b.Property<string>("OutContainerNO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_container_no");

                    b.Property<string>("OutPBID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_pbid");

                    b.Property<string>("OutPhotoPath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_photo_path");

                    b.Property<string>("OutRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_remarks");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("out_time");

                    b.Property<int?>("PurposeID")
                        .HasColumnType("int")
                        .HasColumnName("purpose_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_no");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int")
                        .HasColumnName("visitor_id");

                    b.HasKey("VisitID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PurposeID");

                    b.HasIndex("VisitorID");

                    b.ToTable("visit_records");
                });

            modelBuilder.Entity("KossanVMS.Data.VmsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VmsUsers");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorBlackList", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("BlackList")
                        .HasForeignKey("KossanVMS.Data.VisitorBlackList", "VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorCompany", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("Company")
                        .HasForeignKey("KossanVMS.Data.VisitorCompany", "VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorContact", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("Contact")
                        .HasForeignKey("KossanVMS.Data.VisitorContact", "VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorPhoto", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("Photo")
                        .HasForeignKey("KossanVMS.Data.VisitorPhoto", "VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitRecord", b =>
                {
                    b.HasOne("KossanVMS.Data.VisitBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.VisitCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KossanVMS.Data.VisitPurpose", "Purpose")
                        .WithMany()
                        .HasForeignKey("PurposeID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithMany("VisitRecords")
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Category");

                    b.Navigation("Purpose");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.Visitor", b =>
                {
                    b.Navigation("BlackList");

                    b.Navigation("Company")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Photo")
                        .IsRequired();

                    b.Navigation("VisitRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
