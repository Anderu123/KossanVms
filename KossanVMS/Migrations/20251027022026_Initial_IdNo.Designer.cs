// <auto-generated />
using System;
using KossanVMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KossanVMS.Migrations
{
    [DbContext(typeof(VmsContext))]
    [Migration("20251027022026_Initial_IdNo")]
    partial class Initial_IdNo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KossanVMS.Data.RegisterType", b =>
                {
                    b.Property<int>("RegisterTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("register_type_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegisterTypeID"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("RegisterTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("register_type_name")
                        .HasColumnOrder(1);

                    b.Property<string>("RegisterUserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("register_user_role")
                        .HasColumnOrder(2);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("RegisterTypeID");

                    b.ToTable("register_types");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitBranch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"), 1L, 1);

                    b.Property<string>("BranchConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("branch_connection_string")
                        .HasColumnOrder(4);

                    b.Property<string>("BranchDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("branch_description")
                        .HasColumnOrder(2);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("branch_name")
                        .HasColumnOrder(1);

                    b.Property<bool>("BranchStatus")
                        .HasColumnType("bit")
                        .HasColumnName("branch_status")
                        .HasColumnOrder(3);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("BranchID");

                    b.ToTable("visit_branches");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<bool>("CategoryContract")
                        .HasColumnType("bit")
                        .HasColumnName("category_contract")
                        .HasColumnOrder(4);

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("category_description")
                        .HasColumnOrder(2);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("category_name")
                        .HasColumnOrder(1);

                    b.Property<bool>("CategoryStatus")
                        .HasColumnType("bit")
                        .HasColumnName("category_status")
                        .HasColumnOrder(3);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("CategoryID");

                    b.ToTable("visit_categories");
                });

            modelBuilder.Entity("KossanVMS.Data.Visitor", b =>
                {
                    b.Property<int>("VisitorNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_no")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorNo"), 1L, 1);

                    b.Property<bool>("BlackList")
                        .HasColumnType("bit")
                        .HasColumnName("black_list")
                        .HasColumnOrder(6);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_name")
                        .HasColumnOrder(4);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiry_date")
                        .HasColumnOrder(5);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("full_name")
                        .HasColumnOrder(3);

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<byte>("IdType")
                        .HasColumnType("tinyint")
                        .HasColumnName("id_type")
                        .HasColumnOrder(2);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("VisitorNo");

                    b.HasAlternateKey("IdNo")
                        .HasName("AK_visitors_id_no");

                    b.ToTable("visitors");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorAffiliation", b =>
                {
                    b.Property<int>("AffiliationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("affiliation_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AffiliationID"), 1L, 1);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int")
                        .HasColumnName("company_id")
                        .HasColumnOrder(2);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<string>("Relationship")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("relationship")
                        .HasColumnOrder(3);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("valid_from")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("valid_to")
                        .HasColumnOrder(5);

                    b.HasKey("AffiliationID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("IdNo");

                    b.ToTable("visitor_affiliations");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorBranchLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BranchID")
                        .HasColumnType("int")
                        .HasColumnName("branch_id")
                        .HasColumnOrder(2);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("IdNo");

                    b.ToTable("visitor_branch_links");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorCategoryLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int")
                        .HasColumnName("category_id")
                        .HasColumnOrder(2);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("IdNo");

                    b.ToTable("visitor_category_links");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorCompany", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("company_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"), 1L, 1);

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_address")
                        .HasColumnOrder(3);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("company_name")
                        .HasColumnOrder(1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("registration_no")
                        .HasColumnOrder(2);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("CompanyID");

                    b.ToTable("visitor_companies");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorContact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contact_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address")
                        .HasColumnOrder(2);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city")
                        .HasColumnOrder(3);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postcode")
                        .HasColumnOrder(5);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state")
                        .HasColumnOrder(4);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel")
                        .HasColumnOrder(6);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("ContactID");

                    b.HasIndex("IdNo")
                        .IsUnique();

                    b.ToTable("visitor_contacts");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorPhoto", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("photo_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoID"), 1L, 1);

                    b.Property<DateTime>("CaptureDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("capture_date")
                        .HasColumnOrder(5);

                    b.Property<string>("CapturePhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("capture_photo_path")
                        .HasColumnOrder(2);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("photo_url")
                        .HasColumnOrder(4);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("upload_date")
                        .HasColumnOrder(6);

                    b.Property<string>("UploadPhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("upload_photo_path")
                        .HasColumnOrder(3);

                    b.HasKey("PhotoID");

                    b.HasIndex("IdNo")
                        .IsUnique();

                    b.ToTable("visitor_photos");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitRecord", b =>
                {
                    b.Property<int>("VisitRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visit_record_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitRecordID"), 1L, 1);

                    b.Property<decimal?>("BodyTemperature")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("body_temperature")
                        .HasColumnOrder(15);

                    b.Property<int>("BranchID")
                        .HasColumnType("int")
                        .HasColumnName("branch_id")
                        .HasColumnOrder(2);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int")
                        .HasColumnName("category_id")
                        .HasColumnOrder(3);

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int")
                        .HasColumnName("company_id")
                        .HasColumnOrder(4);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("DONo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("do_no")
                        .HasColumnOrder(14);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiry_date")
                        .HasColumnOrder(16);

                    b.Property<string>("GatePass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gate_pass")
                        .HasColumnOrder(12);

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_no")
                        .HasColumnOrder(1);

                    b.Property<string>("InPhotoPath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_photo_path")
                        .HasColumnOrder(10);

                    b.Property<string>("InRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_remarks")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("out_time")
                        .HasColumnOrder(7);

                    b.Property<int?>("RegisterTypeID")
                        .HasColumnType("int")
                        .HasColumnName("register_type_id")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("TagNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tag_no")
                        .HasColumnOrder(11);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_no")
                        .HasColumnOrder(8);

                    b.Property<string>("VisitPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("visit_person")
                        .HasColumnOrder(13);

                    b.HasKey("VisitRecordID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("IdNo");

                    b.HasIndex("RegisterTypeID");

                    b.ToTable("visit_records");
                });

            modelBuilder.Entity("KossanVMS.Data.VmsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("user_role");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("vms_users");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorAffiliation", b =>
                {
                    b.HasOne("KossanVMS.Data.VisitorCompany", "VisitorCompany")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithMany("VisitorAffiliations")
                        .HasForeignKey("IdNo")
                        .HasPrincipalKey("IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Visitor");

                    b.Navigation("VisitorCompany");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorBranchLink", b =>
                {
                    b.HasOne("KossanVMS.Data.VisitBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithMany("VisitorBranches")
                        .HasForeignKey("IdNo")
                        .HasPrincipalKey("IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorCategoryLink", b =>
                {
                    b.HasOne("KossanVMS.Data.VisitCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithMany("VisitorCategories")
                        .HasForeignKey("IdNo")
                        .HasPrincipalKey("IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorContact", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("Contact")
                        .HasForeignKey("KossanVMS.Data.VisitorContact", "IdNo")
                        .HasPrincipalKey("KossanVMS.Data.Visitor", "IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitorPhoto", b =>
                {
                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithOne("Photo")
                        .HasForeignKey("KossanVMS.Data.VisitorPhoto", "IdNo")
                        .HasPrincipalKey("KossanVMS.Data.Visitor", "IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.VisitRecord", b =>
                {
                    b.HasOne("KossanVMS.Data.VisitBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.VisitCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KossanVMS.Data.VisitorCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KossanVMS.Data.Visitor", "Visitor")
                        .WithMany("VisitRecords")
                        .HasForeignKey("IdNo")
                        .HasPrincipalKey("IdNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KossanVMS.Data.RegisterType", "RegisterType")
                        .WithMany()
                        .HasForeignKey("RegisterTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Branch");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("RegisterType");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("KossanVMS.Data.Visitor", b =>
                {
                    b.Navigation("Contact");

                    b.Navigation("Photo");

                    b.Navigation("VisitRecords");

                    b.Navigation("VisitorAffiliations");

                    b.Navigation("VisitorBranches");

                    b.Navigation("VisitorCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
